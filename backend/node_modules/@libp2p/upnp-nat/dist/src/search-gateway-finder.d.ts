import { TypedEventEmitter } from 'main-event';
import type { GatewayFinder, GatewayFinderEvents } from './upnp-nat.js';
import type { UPnPNAT } from '@achingbrain/nat-port-mapper';
import type { ComponentLogger } from '@libp2p/interface';
export interface SearchGatewayFinderComponents {
    logger: ComponentLogger;
}
export interface SearchGatewayFinderInit {
    portMappingClient: UPnPNAT;
    initialSearchInterval?: number;
    initialSearchTimeout?: number;
    initialSearchMessageInterval?: number;
    searchInterval?: number;
    searchTimeout?: number;
    searchMessageInterval?: number;
}
export declare class SearchGatewayFinder extends TypedEventEmitter<GatewayFinderEvents> implements GatewayFinder {
    private readonly log;
    private readonly gateways;
    private readonly findGateways;
    private readonly portMappingClient;
    private started;
    constructor(components: SearchGatewayFinderComponents, init: SearchGatewayFinderInit);
    start(): Promise<void>;
    stop(): Promise<void>;
}
//# sourceMappingURL=search-gateway-finder.d.ts.map