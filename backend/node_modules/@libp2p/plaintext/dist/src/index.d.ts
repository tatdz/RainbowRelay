/**
 * @packageDocumentation
 *
 * A connection encrypter that does no connection encryption and trusts the
 * remote peer to provide the correct PeerId.
 *
 * This should not be used in production and is for research purposes only.
 *
 * @example
 *
 * ```typescript
 * import { createLibp2p } from 'libp2p'
 * import { plaintext } from '@libp2p/plaintext'
 *
 * const node = await createLibp2p({
 *   // ...other options
 *   connectionEncrypters: [
 *     plaintext()
 *   ]
 * })
 * ```
 */
import type { ComponentLogger, ConnectionEncrypter, PrivateKey } from '@libp2p/interface';
export interface PlaintextComponents {
    privateKey: PrivateKey;
    logger: ComponentLogger;
}
export declare function plaintext(): (components: PlaintextComponents) => ConnectionEncrypter;
//# sourceMappingURL=index.d.ts.map