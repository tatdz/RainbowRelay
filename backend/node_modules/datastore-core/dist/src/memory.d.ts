import { Key } from 'interface-datastore/key';
import { BaseDatastore } from './base.js';
import type { KeyQuery, Pair, Query } from 'interface-datastore';
import type { AbortOptions, Await, AwaitIterable } from 'interface-store';
export declare class MemoryDatastore extends BaseDatastore {
    private readonly data;
    constructor();
    put(key: Key, val: Uint8Array, options?: AbortOptions): Await<Key>;
    get(key: Key, options?: AbortOptions): Await<Uint8Array>;
    has(key: Key, options?: AbortOptions): Await<boolean>;
    delete(key: Key, options?: AbortOptions): Await<void>;
    _all(q: Query, options?: AbortOptions): AwaitIterable<Pair>;
    _allKeys(q: KeyQuery, options?: AbortOptions): AwaitIterable<Key>;
}
//# sourceMappingURL=memory.d.ts.map