{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["/**\n * @packageDocumentation\n *\n * A Blockstore is a key/value database that lets use CIDs to store/retrieve binary blobs.\n *\n * It is used by IPFS to store/retrieve the block that a given CID resolves to.\n *\n * ## Implementations\n *\n * - File System: [`blockstore-fs`](https://github.com/ipfs/js-stores/tree/main/packages/blockstore-fs)\n * - IndexedDB: [`blockstore-idb`](https://github.com/ipfs/js-stores/blob/main/packages/blockstore-idb)\n * - level: [`blockstore-level`](https://github.com/ipfs/js-stores/tree/main/packages/blockstore-level) (supports any levelup compatible backend)\n * - Memory: [`blockstore-core/memory`](https://github.com/ipfs/js-stores/blob/main/packages/blockstore-core/src/memory.ts)\n * - S3: [`blockstore-s3`](https://github.com/ipfs/js-stores/tree/main/packages/blockstore-s3)\n */\n\nimport type {\n  AbortOptions,\n  AwaitIterable,\n  Store\n} from 'interface-store'\nimport type { CID } from 'multiformats/cid'\n\nexport interface Pair {\n  cid: CID\n  block: Uint8Array\n}\n\nexport interface Blockstore <HasOptionsExtension = {},\nPutOptionsExtension = {}, PutManyOptionsExtension = {},\nGetOptionsExtension = {}, GetManyOptionsExtension = {}, GetAllOptionsExtension = {},\nDeleteOptionsExtension = {}, DeleteManyOptionsExtension = {}> extends Store<CID, Uint8Array, Pair, HasOptionsExtension,\n  PutOptionsExtension, PutManyOptionsExtension,\n  GetOptionsExtension, GetManyOptionsExtension,\n  DeleteOptionsExtension, DeleteManyOptionsExtension> {\n  /**\n   * Retrieve all cid/block pairs from the blockstore as an unordered iterable\n   *\n   * @example\n   * ```js\n   * for await (const { multihash, block } of store.getAll()) {\n   *   console.log('got:', multihash, block)\n   *   // => got MultihashDigest('Qmfoo') Uint8Array[...]\n   * }\n   * ```\n   */\n  getAll(options?: AbortOptions & GetAllOptionsExtension): AwaitIterable<Pair>\n}\n"],
  "mappings": ";6YAAA,IAAAA,EAAA",
  "names": ["index_exports"]
}
