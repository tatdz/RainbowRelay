import { EventEmitter } from 'node:events';
import type { CachedAdvert } from './adverts.js';
import type { Advertisement, DiscoverOptions, Service, SSDP as SSDPInterface, SSDPOptions, SSDPSocket } from './index.js';
export declare class SSDP extends EventEmitter implements SSDPInterface {
    udn: string;
    signature: string;
    sockets: SSDPSocket[];
    readonly options: SSDPOptions;
    private readonly abortController;
    constructor(options?: SSDPOptions);
    start(): Promise<void>;
    stop(): Promise<void>;
    advertise(advert: Advertisement): Promise<CachedAdvert>;
    discover<Details = Record<string, any>>(serviceType?: string | DiscoverOptions): AsyncGenerator<Service<Details>, void, any>;
}
//# sourceMappingURL=ssdp.d.ts.map