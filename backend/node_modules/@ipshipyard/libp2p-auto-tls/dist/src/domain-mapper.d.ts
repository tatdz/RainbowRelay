import type { ComponentLogger, Libp2pEvents, TypedEventTarget } from '@libp2p/interface';
import type { AddressManager } from '@libp2p/interface-internal';
export interface DomainMapperComponents {
    logger: ComponentLogger;
    events: TypedEventTarget<Libp2pEvents>;
    addressManager: AddressManager;
}
export interface DomainMapperInit {
    domain: string;
    autoConfirmAddress?: boolean;
}
export declare class DomainMapper {
    private readonly log;
    private readonly addressManager;
    private readonly events;
    private readonly mappedAddresses;
    private readonly domain;
    private readonly autoConfirmAddress;
    private hasCertificate;
    constructor(components: DomainMapperComponents, init: DomainMapperInit);
    start(): void;
    stop(): void;
    onSelfUpdate(): void;
    onCertificate(): void;
    updateMappings(): void;
    private toDomain;
}
//# sourceMappingURL=domain-mapper.d.ts.map