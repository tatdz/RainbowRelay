/// <reference types="node" />
/// <reference types="node" />
import { Buffer } from 'node:buffer';
import type { RSAPrivateKey } from '@libp2p/interface';
import type { Keychain } from '@libp2p/keychain';
import type { Multiaddr } from '@multiformats/multiaddr';
/**
 * Loads a key and returns it in PCKS#1 DER in PEM format
 */
export declare function loadOrCreateKey(keychain: Keychain, name: string, size: number): Promise<string>;
export declare function toBuffer(uint8Array: Uint8Array): Buffer;
export declare function formatAsPem(key: RSAPrivateKey): string;
export declare function importFromPem(pem: string): RSAPrivateKey;
export declare function supportedAddressesFilter(ma: Multiaddr): boolean;
export declare function getPublicIps(addrs: Multiaddr[]): Set<string>;
export declare function createCsr(domain: string, keyPem: string): Promise<string>;
//# sourceMappingURL=utils.d.ts.map